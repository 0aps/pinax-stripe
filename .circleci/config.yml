version: 2.0

common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - v3-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - run:
        name: upload coverage report
        command: |
          if [[ "${TOXENV%-coverage}" != "$TOXENV" ]]; then
            .tox/$TOXENV/bin/coverage xml
            bash <(curl -s https://codecov.io/bash) -Z -X gcov -X coveragepy -X fix -X search -X xcode -f coverage.xml -F $CIRCLE_JOB
          fi
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
        key: v3-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

jobs:
  lint:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          - TOXENV=checkqa,check_migrated
          - UPLOAD_COVERAGE=0
  py35dj22:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35-dj22-coverage
  py36dj22:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36-dj22-coverage
  py36dj3:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36-dj22-coverage
  py37dj22:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV=py37-dj22-coverage
  py37dj3:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV=py37-dj3-coverage
  py38dj22:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV=py38-dj22-coverage
  py38dj3:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV=py38-dj3-coverage
  py38dj3psql:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          - TOXENV=py38-dj3-postgres-coverage
          - PINAX_STRIPE_DATABASE_HOST=127.0.0.1
          - PINAX_STRIPE_DATABASE_USER=postgres
          - PINAX_STRIPE_DATABASE_NAME=circle_test
      - image: circleci/postgres:11.7
  release:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: verify git tag vs. version
          command: |
            if [[ `python setup.py --version` == ${CIRCLE_TAG/v/} ]]; then
              echo "Tag matches version, proceed with the release!";
            else
              echo "Fix version in setup.py and re-tag so they match!"; exit 1
            fi
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create and upload packages
          command: python setup.py sdist bdist_wheel upload

workflows:
  version: 2
  test:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - py35dj22:
          filters:
            tags:
              only: /.*/
      - py36dj22:
          filters:
            tags:
              only: /.*/
      - py36dj3:
          filters:
            tags:
              only: /.*/
      - py37dj22:
          filters:
            tags:
              only: /.*/
      - py37dj3:
          filters:
            tags:
              only: /.*/
      - py38dj22:
          filters:
            tags:
              only: /.*/
      - py38dj3:
          filters:
            tags:
              only: /.*/
      - py38dj3psql:
          filters:
            tags:
              only: /.*/
      - release:
          context: org-global
          requires:
            - lint
            - py35dj22
            - py36dj3
            - py36dj22
            - py37dj3
            - py37dj22
            - py38dj3
            - py38dj22
            - py38dj3psql
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
